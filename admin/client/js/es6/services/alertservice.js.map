{"version":3,"sources":["services/alertservice.ts"],"names":["slatwalladmin","slatwalladmin.Alert","slatwalladmin.Alert.constructor","slatwalladmin.AlertService","slatwalladmin.AlertService.constructor","slatwalladmin.AlertService.get"],"mappings":"AAAA,AACA,wGADwG;AACxG,YAAY,CAAC;AACb,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAC9B,OAAO,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;AAEtC,IAAO,aAAa,CA2GnB;AA3GD,WAAO,aAAa,EAAA,CAAC;IACjBA,AACAA,OADOA;QACMA,KAAKA;QAGdC,SAHSA,KAAKA,CAIVA,GAAWA,EACXA,IAAYA;YAEZC,IAAIA,CAACA,GAAGA,GAAGA,GAAGA,CAACA;YACfA,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;QACrBA,CAACA;QACLD,YAACA;IAADA,CAVAD,AAUCC,IAAAD;IAVYA,mBAAKA,GAALA,KAUZA,CAAAA;IA2BDA,IAAaA,YAAYA;QAKrBG,SALSA,YAAYA,CAMTA,QAA4BA,EAC5BA,MAAaA;YADbC,aAAQA,GAARA,QAAQA,CAAoBA;YAC5BA,WAAMA,GAANA,MAAMA,CAAOA;YAErBA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,MAAMA,CAACA,EAAEA,CAACA,CAACA;QACjCA,CAACA;QAEDD;;;;;;;;WAQGA;QACHA,0BAAGA,GAAHA;YACIE,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA;QACvBA,CAACA;QAtBaF,oBAAOA,GAAGA;YACpBA,UAAUA;SACbA,CAACA;QAgENA,mBAACA;IAADA,CAnEAH,AAmECG,IAAAH;IAnEYA,0BAAYA,GAAZA,YAmEZA,CAAAA;AACLA,CAACA,EA3GM,aAAa,KAAb,aAAa,QA2GnB;AAGG;;;;;;;;;;;;;KAaC","file":"services/alertservice.js","sourceRoot":"/Users/ryanmarchand/Sites/Slatwall/","sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin')\n.factory('alertService',alertService);\n\nmodule slatwalladmin{\n    //model\n    export class Alert {\n        msg:string;\n        type:string;\n        constructor(\n            msg: string,\n            type: string\n        ) { \n            this.msg = msg;\n            this.type = type;   \n        }\n    }\n    \n    /*export class Alerts {\n        alerts:Alert[];\n        constructor(\n            alerts:Alert[]\n        ){\n            this.alerts = alerts;  \n        }\n        \n        addAlert(alert:Alert){\n            this.alerts.push(alert);\n        }\n        removeAlert(alert:Alert){\n            var index:number = this.alerts.indexOf(alert, 0);\n            if (index != undefined) {\n               this.alerts.splice(index, 1);\n            }\n        }\n    }*/\n    //service\n    \n    export interface IAlertService {\n        get (): Alert[];\n        put(alerts: Alert[]);\n    }\n    \n    export class AlertService implements IAlertService{\n        public static $inject = [\n            '$timeout'\n        ];\n        \n        constructor(\n            private $timeout: ng.ITimeoutService,\n            private alerts:Alerts\n        ) {\n            this.alerts = new Alerts([]);\n        }\n        \n        /*STORAGE_ID = 'todos-angularjs-typescript';\n\n        get (): TodoItem[] {\n            return JSON.parse(localStorage.getItem(this.STORAGE_ID) || '[]');\n        }\n\n        put(todos: TodoItem[]) {\n            localStorage.setItem(this.STORAGE_ID, JSON.stringify(todos));\n        }*/\n        get(): Alerts{\n            return this.alerts;\n        }\n       // put(alerts:)\n       \n        /*addAlert(alert:Alert){\n            this.alerts.addAlert(alert);\n            $timeout(function() {\n              this.alerts.removeAlert(alert);\n            }, 3500);\n        }\n        addAlerts(alerts:Alert[]){\n            alerts.forEach(function(alert:Alert){\n                this.addAlert(alert)\n            });\n        }\n        \n        removeAlert(alert:Alert){\n            this.alerts.removeAlert(alert);\n        }*/\n       /* formatMessagesToAlerts: (messages:string[]){\n            var alerts = [];\n            for(var message in messages){\n                var alert = new Alert(){\n                    msg:messages[message].message,\n                    type:messages[message].messageType\n                };\n                alerts.push(alert);\n                if(alert.type === 'success' || alert.type === 'error'){\n                     $timeout(function() {\n                      alert.fade = true;\n                    }, 3500);\n                    \n                    alert.dismissable = false;\n                    \n                }else{\n                    alert.fade = false;\n                    alert.dismissable = true;\n                }\n            }\n            return alerts;\n        }*/\n        \n//        removeOldestAlert() =>{\n//            this._alerts.splice(0,1);\n//        }\n    }    \n}\n\n    \n    /*[ \n\t'$timeout',\n\tfunction(\n\t\t$timeout\n\t){\n\t\t\n\t\t\n\t\tvar alertService = {\n\t\t\t\n\t\t};\n\t\t\n\t\treturn alertService;\n\t}\n]);*/\n"]}