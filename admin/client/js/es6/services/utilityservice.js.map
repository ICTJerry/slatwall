{"version":3,"sources":["services/utilityservice.ts"],"names":[],"mappings":"AAAA,AACA,wGADwG;AACxG,YAAY,CAAC;AACb,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAC9B,OAAO,CAAC,gBAAgB,EAAC;IACzB;QAEC,sCAAsC;QAEtC,AAGA,oDAHoD;QAEpD,kCAAkC;YAC9B,cAAc,GAAG;YACpB,QAAQ,EAAC,UAAS,KAAK;gBACtB,IAAI,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;gBAErB,IAAI,IAAI,GAAG,EAAE,CAAC;gBACd,IAAI,QAAQ,GAAG,gEAAgE,CAAC;gBAEhF,GAAG,CAAA,CAAE,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE;oBACxB,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBAEzE,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,AACA,gBADgB;YAChB,QAAQ,EAAC,UAAS,IAAI,EAAC,KAAK,EAAC,SAAS;gBACrC,EAAE,CAAA,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA,CAAC;oBAClC,SAAS,GAAG,GAAG,CAAC;gBACjB,CAAC;gBACD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACxC,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC;gBACrB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,IAAI,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAChC,EAAE,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC;wBAAC,QAAQ,CAAC;oBAElC,WAAW,GAAG,CAAC,CAAC;oBAChB,KAAK,CAAC;gBACV,CAAC;YACF,CAAC;YACD,OAAO,EAAC,UAAS,IAAI,EAAC,SAAS;gBAE9B,EAAE,CAAA,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA,CAAC;oBAClC,SAAS,GAAG,GAAG,CAAC;gBACjB,CAAC;gBACD,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;YAC3B,CAAC;YACD,WAAW,EAAC,UAAS,KAAK,EAAE,YAAY;gBAC3B,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1B,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnB,AAEC,8BAF6B;gBAE7B,KAAK,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC;oBACpB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,MAAM,CAAC,CAAC,CAAC;oBACb,CAAC;oBACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBAClB,MAAM,CAAC,CAAC,CAAC,CAAC;oBACd,CAAC;oBACD,AASA;;;;;;;uBAFG;oBACH,uBAAuB;oBACvB,MAAM,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;SACJ,CAAC;QAER,MAAM,CAAC,cAAc,CAAC;IACvB,CAAC;CACD,CAAC,CAAC","file":"services/utilityservice.js","sourceRoot":"/Users/david/Sites/Slatwall/","sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin')\n.factory('utilityService',[ \n\tfunction(\n\t){\n\t\t//declare public and private variables\n\t\t\n\t\t//Define our contexts and validation property enums.\n\t\t\n\t\t//declare service we are returning\n\t\tvar utilityService = {\n\t\t\tcreateID:function(count){\n\t\t\t\tvar count = count || 26;\n\t\t\t\t\n\t\t\t    var text = \"\";\n\t\t\t    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\t\t\t\n\t\t\t    for( var i=0; i < count; i++ )\n\t\t\t        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\t\t\t\n\t\t\t    return text;\n\t\t\t},\n\t\t\t//list functions\n\t\t\tlistFind:function(list,value,delimiter){\n\t\t\t\tif(angular.isUndefined(delimiter)){\n\t\t\t\t\tdelimiter = ',';\n\t\t\t\t}\n\t\t\t\tvar splitString = list.split(delimiter);\n\t\t\t\tvar stringFound = -1;\n\t\t\t\tfor (var i = 0; i < splitString.length; i++) {\n\t\t\t\t    var stringPart = splitString[i];\n\t\t\t\t    if (stringPart != value) continue;\n\n\t\t\t\t    stringFound = i;\n\t\t\t\t    break;\n\t\t\t\t}\n\t\t\t},\n\t\t\tlistLen:function(list,delimiter){\n\t\t\t\t\n\t\t\t\tif(angular.isUndefined(delimiter)){\n\t\t\t\t\tdelimiter = ',';\n\t\t\t\t}\n\t\t\t\tvar splitString = list.split(delimiter);\n\t\t\t\treturn splitString.length;\n\t\t\t},\n\t\t\tarraySorter:function(array, keysToSortBy){\n                console.log(\"here again and again\");\n                console.log(keysToSortBy);\n                var key1 = keysToSortBy[0];\n                console.log(key1);\n               // var key2 = keysToSortBy[1];\n             \n                array.sort(function(a, b) {\n                    if (a.key1 > b.key1) {\n                        return 1;\n                    }\n                    if (a.key1 < b.key1) {\n                        return -1;\n                    }\n                    /*if (a.key1 === b.key1) {\n                        if (a.key2 > b.key2) {\n                            return 1;\n                        }\n                        if (a.key2 < b.key2) {\n                            return -1;\n                        }\n                    }*/\n                    // a must be equal to b\n                    return 0;\n                });\n                return array;\n            }\n        };\n\t\t\n\t\treturn utilityService;\n\t}\n]);\n"]}