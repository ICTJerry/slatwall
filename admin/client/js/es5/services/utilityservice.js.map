{"version":3,"names":[],"mappings":"","sources":["services/utilityservice.js"],"sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin').factory('utilityService', [\n    function () {\n        //declare public and private variables\n        //Define our contexts and validation property enums.\n        //declare service we are returning\n        var utilityService = {\n            createID: function (count) {\n                var count = count || 26;\n                var text = \"\";\n                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n                for (var i = 0; i < count; i++)\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\n                return text;\n            },\n            //list functions\n            listFind: function (list, value, delimiter) {\n                if (angular.isUndefined(delimiter)) {\n                    delimiter = ',';\n                }\n                var splitString = list.split(delimiter);\n                var stringFound = -1;\n                for (var i = 0; i < splitString.length; i++) {\n                    var stringPart = splitString[i];\n                    if (stringPart != value)\n                        continue;\n                    stringFound = i;\n                    break;\n                }\n            },\n            listLen: function (list, delimiter) {\n                if (angular.isUndefined(delimiter)) {\n                    delimiter = ',';\n                }\n                var splitString = list.split(delimiter);\n                return splitString.length;\n            },\n            arraySorter: function (array, keyToSortBy) {\n                array.sort(function (a, b) {\n                    if (angular.isDefined(keyToSortBy)) {\n                        if (a[keyToSortBy] < b[keyToSortBy]) {\n                            return -1;\n                        }\n                        else if (a[keyToSortBy] > b[keyToSortBy]) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                    else {\n                        if (a < b) {\n                            return -1;\n                        }\n                        else if (a > b) {\n                            return 1;\n                        }\n                        else {\n                            return 0;\n                        }\n                    }\n                });\n                return array;\n            }\n        };\n        return utilityService;\n    }\n]);\n\n//# sourceMappingURL=../services/utilityservice.js.map"],"file":"services/utilityservice.js","sourceRoot":"/source/"}