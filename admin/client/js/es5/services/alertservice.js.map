{"version":3,"names":[],"mappings":"","sources":["services/alertservice.js"],"sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin').factory('alertService', alertService);\nvar slatwalladmin;\n(function (slatwalladmin) {\n    //model\n    var Alert = (function () {\n        function Alert(msg, type) {\n            this.msg = msg;\n            this.type = type;\n        }\n        return Alert;\n    })();\n    slatwalladmin.Alert = Alert;\n    var AlertService = (function () {\n        function AlertService($timeout, alerts) {\n            this.$timeout = $timeout;\n            this.alerts = alerts;\n            this.alerts = new Alerts([]);\n        }\n        /*STORAGE_ID = 'todos-angularjs-typescript';\n\n        get (): TodoItem[] {\n            return JSON.parse(localStorage.getItem(this.STORAGE_ID) || '[]');\n        }\n\n        put(todos: TodoItem[]) {\n            localStorage.setItem(this.STORAGE_ID, JSON.stringify(todos));\n        }*/\n        AlertService.prototype.get = function () {\n            return this.alerts;\n        };\n        AlertService.$inject = [\n            '$timeout'\n        ];\n        return AlertService;\n    })();\n    slatwalladmin.AlertService = AlertService;\n})(slatwalladmin || (slatwalladmin = {}));\n/*[\n'$timeout',\nfunction(\n    $timeout\n){\n    \n    \n    var alertService = {\n        \n    };\n    \n    return alertService;\n}\n]);*/\n\n//# sourceMappingURL=../services/alertservice.js.map"],"file":"services/alertservice.js","sourceRoot":"/source/"}