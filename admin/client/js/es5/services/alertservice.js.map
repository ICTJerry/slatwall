{"version":3,"names":[],"mappings":"","sources":["services/alertservice.js"],"sourcesContent":["/*services return promises which can be handled uniquely based on success or failure by the controller*/\n'use strict';\nangular.module('slatwalladmin').factory('alertService', [\n    '$timeout',\n    function ($timeout) {\n        var _alerts = [];\n        var alertService = {\n            addAlert: function (alert) {\n                _alerts.push(alert);\n                $timeout(function () {\n                    _alerts.splice(0, 1);\n                }, 3500);\n            },\n            addAlerts: function (alerts) {\n                for (var alert in alerts) {\n                    _alerts.push(alerts[alert]);\n                    $timeout(function () {\n                        _alerts.splice(0, 1);\n                    }, 3500);\n                }\n            },\n            formatMessagesToAlerts: function (messages) {\n                var alerts = [];\n                for (var message in messages) {\n                    var alert = {\n                        msg: messages[message].message,\n                        type: messages[message].messageType\n                    };\n                    alerts.push(alert);\n                    if (alert.type === 'success' || alert.type === 'error') {\n                        $timeout(function () {\n                            alert.fade = true;\n                        }, 3500);\n                        alert.dismissable = false;\n                    }\n                    else {\n                        alert.fade = false;\n                        alert.dismissable = true;\n                    }\n                }\n                return alerts;\n            },\n            getAlerts: function () {\n                return _alerts;\n            },\n            removeAlert: function (alert) {\n                for (var i in _alerts) {\n                    if (_alerts[i] === alert) {\n                        delete _alerts[i];\n                    }\n                }\n            },\n            removeOldestAlert: function () {\n                _alert.splice(0, 1);\n            }\n        };\n        return alertService;\n    }\n]);\n\n//# sourceMappingURL=../services/alertservice.js.map"],"file":"services/alertservice.js","sourceRoot":"/source/"}