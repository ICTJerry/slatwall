{"version":3,"names":[],"mappings":"","sources":["directives/workflow/swworkflowcondition.js"],"sourcesContent":["angular.module('slatwalladmin').directive('swWorkflowCondition', [\n    '$log',\n    '$location',\n    '$slatwall',\n    'formService',\n    'metadataService',\n    'workflowPartialsPath',\n    function ($log, $location, $slatwall, formService, metadataService, workflowPartialsPath) {\n        return {\n            restrict: 'E',\n            scope: {\n                workflowCondition: \"=\",\n                workflowConditionIndex: \"=\",\n                workflow: \"=\",\n                filterPropertiesList: \"=\"\n            },\n            templateUrl: workflowPartialsPath + \"workflowcondition.html\",\n            link: function (scope, element, attrs) {\n                $log.debug('workflowCondition init');\n                $log.debug(scope);\n                scope.selectBreadCrumb = function (breadCrumbIndex) {\n                    //splice out array items above index\n                    var removeCount = scope.filterItem.breadCrumbs.length - 1 - breadCrumbIndex;\n                    scope.filterItem.breadCrumbs.splice(breadCrumbIndex + 1, removeCount);\n                    scope.selectedFilterPropertyChanged(null);\n                };\n                scope.selectedFilterPropertyChanged = function (selectedFilterProperty) {\n                    $log.debug('selectedFilterProperty');\n                    $log.debug(selectedFilterProperty);\n                    scope.selectedFilterProperty = selectedFilterProperty;\n                };\n                if (angular.isUndefined(scope.workflowCondition.breadCrumbs)) {\n                    scope.workflowCondition.breadCrumbs = [];\n                    if (scope.workflowCondition.propertyIdentifier === \"\") {\n                        scope.workflowCondition.breadCrumbs = [\n                            {\n                                entityAlias: scope.workflow.data.workflowObject,\n                                cfc: scope.workflow.data.workflowObject,\n                                propertyIdentifier: scope.workflow.data.workflowObject\n                            }\n                        ];\n                    }\n                    else {\n                        var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');\n                        entityAliasArrayFromString.pop();\n                        for (var i in entityAliasArrayFromString) {\n                            var breadCrumb = {\n                                entityAlias: entityAliasArrayFromString[i],\n                                cfc: entityAliasArrayFromString[i],\n                                propertyIdentifier: entityAliasArrayFromString[i]\n                            };\n                            scope.workflowCondition.breadCrumbs.push(breadCrumb);\n                        }\n                    }\n                }\n                else {\n                    angular.forEach(scope.workflowCondition.breadCrumbs, function (breadCrumb, key) {\n                        if (angular.isUndefined(scope.filterPropertiesList[breadCrumb.propertyIdentifier])) {\n                            var filterPropertiesPromise = $slatwall.getFilterPropertiesByBaseEntityName(breadCrumb.cfc);\n                            filterPropertiesPromise.then(function (value) {\n                                metadataService.setPropertiesList(value, breadCrumb.propertyIdentifier);\n                                scope.filterPropertiesList[breadCrumb.propertyIdentifier] = metadataService.getPropertiesListByBaseEntityAlias(breadCrumb.propertyIdentifier);\n                                metadataService.formatPropertiesList(scope.filterPropertiesList[breadCrumb.propertyIdentifier], breadCrumb.propertyIdentifier);\n                                var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');\n                                entityAliasArrayFromString.pop();\n                                entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();\n                                if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {\n                                    for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {\n                                        var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];\n                                        if (filterProperty.propertyIdentifier === scope.workflowCondition.propertyIdentifier) {\n                                            //selectItem from drop down\n                                            scope.selectedFilterProperty = filterProperty;\n                                            //decorate with value and comparison Operator so we can use it in the Condition section\n                                            scope.selectedFilterProperty.value = scope.workflowCondition.value;\n                                            scope.selectedFilterProperty.comparisonOperator = scope.workflowCondition.comparisonOperator;\n                                        }\n                                    }\n                                }\n                            });\n                        }\n                        else {\n                            var entityAliasArrayFromString = scope.workflowCondition.propertyIdentifier.split('.');\n                            entityAliasArrayFromString.pop();\n                            entityAliasArrayFromString = entityAliasArrayFromString.join('.').trim();\n                            if (angular.isDefined(scope.filterPropertiesList[entityAliasArrayFromString])) {\n                                for (var i in scope.filterPropertiesList[entityAliasArrayFromString].data) {\n                                    var filterProperty = scope.filterPropertiesList[entityAliasArrayFromString].data[i];\n                                    if (filterProperty.propertyIdentifier === scope.workflowCondition.propertyIdentifier) {\n                                        //selectItem from drop down\n                                        scope.selectedFilterProperty = filterProperty;\n                                        //decorate with value and comparison Operator so we can use it in the Condition section\n                                        scope.selectedFilterProperty.value = scope.workflowCondition.value;\n                                        scope.selectedFilterProperty.comparisonOperator = scope.workflowCondition.comparisonOperator;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        };\n    }\n]);\n\n//# sourceMappingURL=../../directives/workflow/swworkflowcondition.js.map"],"file":"directives/workflow/swworkflowcondition.js","sourceRoot":"/source/"}